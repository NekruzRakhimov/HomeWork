import re

"""
2. Замена имён в судебном решении
Написать программу, которая заменит в тексте ФИО
подсудимого на N. Каждое слово в ФИО начинается с
заглавной буквы, фамилия может быть двойная.

Вводимый текст:
Подсудимая Эверт-Колокольцева Елизавета Александровна
в судебном заседании вину инкриминируемого
правонарушения признала в полном объёме и суду показала,
что 14 сентября 1876 года, будучи в состоянии алкогольного
опьянения от безысходности, в связи с состоянием здоровья
позвонила со своего стационарного телефона в полицию,
сообщив о том, что у неё в квартире якобы заложена бомба.
После чего приехали сотрудники полиции, скорая
и пожарные, которым она сообщила, что бомба — это она.

Вывод:
«Подсудимая N в судебном заседании» и далее по тексту.
"""

# """
# r'\b([А-ЯЁ][а-яё]+(-[А-ЯЁ][а-яё]+)?\s+[А-ЯЁ][а-яё]+\s+[А-ЯЁ][а-яё]+)\b' по частям:
# 1.	r'...':
# •	Это строка, помеченная как сырой литерал (raw string), что означает, что в ней не нужно экранировать обратные слэши (например, \\), и они воспринимаются буквально.
# 2.	\b:
# •	Это граница слова (word boundary), которая указывает на границу между символом, который является частью слова, и символом, который не является частью слова (например, пробел или начало/конец строки). Это нужно для того, чтобы гарантировать, что мы захватываем полные ФИО, а не их части.
# 3.	([А-ЯЁ][а-яё]+(-[А-ЯЁ][а-яё]+)?\s+[А-ЯЁ][а-яё]+\s+[А-ЯЁ][а-яё]+):
# •	Это основная часть выражения, в которой происходит поиск ФИО. Давайте разберем её подробнее:
# 1.	([А-ЯЁ][а-яё]+:
# •	[А-ЯЁ] — это класс символов, который соответствует заглавной букве кириллицы (буквы от А до Я, а также Ё).
# •	[а-яё]+ — это класс символов, который соответствует одной или более строчным буквам кириллицы (буквы от а до я, а также ё).
# •	Таким образом, это выражение ищет первую букву фамилии, имя или отчество с заглавной буквы, а затем одну или более строчных букв.
# 2.	(-[А-ЯЁ][а-яё]+)?:
# •	(-[А-ЯЁ][а-яё]+) — это необязательная группа, которая соответствует двойной фамилии с дефисом (например, “Эверт-Колокольцева”).
# •	? — означает, что вся эта группа является необязательной, то есть она может либо присутствовать, либо отсутствовать.
# 3.	\s+:
# •	Это означает один или более пробельных символов (пробел, табуляция и т.д.). Он разделяет фамилию от имени и отчества.
# 4.	[А-ЯЁ][а-яё]+:
# •	Это ищет имя или отчество, которое начинается с заглавной буквы, за которой следуют строчные буквы.
# 5.	\s+:
# •	Это снова один или более пробельных символов между именем и отчестом.
# 6.	[А-ЯЁ][а-яё]+:
# •	Это аналогично предыдущей части, но для отчества.
# 4.	\b:
# •	В конце мы снова ставим границу слова, чтобы убедиться, что после фамилии, имени и отчества не идут лишние символы (например, точка или запятая).
# """


def replace_names_in_file(file_path):
    # Регулярное выражение для поиска ФИО подсудимого
    name_pattern = r'\b([А-ЯЁ][а-яё]+(-[А-ЯЁ][а-яё]+)?\s+[А-ЯЁ][а-яё]+\s+[А-ЯЁ][а-яё]+)\b'

    # Чтение текста из файла
    with open(file_path, 'r', encoding='utf-8') as file:
        text = file.read()

    # Замена найденных ФИО на 'N'
    modified_text = re.sub(name_pattern, 'N', text)

    # Запись изменённого текста обратно в файл
    with open(file_path, 'w', encoding='utf-8') as file:
        file.write(modified_text)

    print("ФИО подсудимого заменены на 'N'.")


# Путь к файлу с текстом
file_path = 'info.txt'

# Замена ФИО в файле
replace_names_in_file(file_path)
